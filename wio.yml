# "pkg" tag contains core information about the project. This will produce a package that can be used in other
# wio projects. Wio provides native support for packages created this way and they are included flawlessly.
# Following are some key points about customizing your package:
# - Frameworks are SDKs for embedded devices. They contain set of libraries to use when coding.
#   Wio supports core "arduino" and "cosa" (an open source OOP AVR development platform).
# - Platform is the type of chip that this application will be uploaded. This platform provides
#   libraries to access chip hardware and compilers to compile them. Wio supports "AVR" platform.
# - You can specify multiple authors, frameworks and boards. This information will be used to check if this
#   library is compatible with the project it is being used in.
# - If you want your package to be compiled with certain flags when used, provide those flags in compile_flags tag.
pkg:
  name: wioPackage
  description: "Quinton's pkg for SDC2160S"
  url: ""
  version: 0.0.1
  author: ""
  contributors: []
  organization: ""
  keywords: []
  license: ""
  platform: avr
  framework:
  - cosa
  board:
  - uno
  compile_flags: []
  ide: none

# "targets" tag allows for testing and development for various settings and configurations. You can create
# multiple targets where you can define different types of boards and compile flags. By default one target
# is created, which is defined based on settings chosen by you in the creating process.
targets:
  default: tests
  create:
    tests:
      board: uno
      compile_flags: []

# "dependencies" tag allows user to include other packages into their project. There is a package manager built into
# wio and you can make use of that by specifying packages in this tag. Dependencies will be a list of packages and
# you can specify different options for each of them. Following are some key points about this"
# - version is where you specify the version of the dependency (required only for remote packages)
# - vendor is a flag that specifies if the dependency is in vendor package or not (by default it is false)
# - compile_flags are where you specify the compile flags for the dependency
# Example:
# dependencies:
#   # this is a remote dependency 
#   myLib:
#       version: 0.0.1
#       compile_flags: ["HELLO", "NOO"]
#   # this is a vendor dependency
#   myLib2:
#       vendor: true
#       compile_flags: ["Vendor"]
dependencies:
  wlib-wio:
    version: latest
    vendor: false
    compile_flags: [-DMAX_ALLOCATORS=2, -DNUM_BLOCKS=4]
